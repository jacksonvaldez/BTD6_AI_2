import numpy as np

# Updates the trained params with the mutated params

filters1 = np.load('mutated_params/filters1.npy')
filters2 = np.load('mutated_params/filters2.npy')
biases1 = np.load('mutated_params/biases1.npy')
biases2 = np.load('mutated_params/biases2.npy')
weights1 = np.load('mutated_params/weights1.npy')
weights2 = np.load('mutated_params/weights2.npy')
weights3_p1 = np.load('mutated_params/weights3_p1.npy')
weights3_p2 = np.load('mutated_params/weights3_p2.npy')
weights3_p3 = np.load('mutated_params/weights3_p3.npy')
weights4_p1 = np.load('mutated_params/weights4_p1.npy')
weights4_p2 = np.load('mutated_params/weights4_p2.npy')
biases3 = np.load('mutated_params/biases3.npy')
biases4 = np.load('mutated_params/biases4.npy')
biases5_p1 = np.load('mutated_params/biases5_p1.npy')
biases5_p2 = np.load('mutated_params/biases5_p2.npy')
biases5_p3 = np.load('mutated_params/biases5_p3.npy')
biases6_p1 = np.load('mutated_params/biases6_p1.npy')
biases6_p2 = np.load('mutated_params/biases6_p2.npy')

np.save('trained_params/filters1.npy', filters1)
np.save('trained_params/filters2.npy', filters2)
np.save('trained_params/biases1.npy', biases1)
np.save('trained_params/biases2.npy', biases2)
np.save('trained_params/weights1.npy', weights1)
np.save('trained_params/weights2.npy', weights2)
np.save('trained_params/weights3_p1.npy', weights3_p1)
np.save('trained_params/weights3_p2.npy', weights3_p2)
np.save('trained_params/weights3_p3.npy', weights3_p3)
np.save('trained_params/weights4_p1.npy', weights4_p1)
np.save('trained_params/weights4_p2.npy', weights4_p2)
np.save('trained_params/biases3.npy', biases3)
np.save('trained_params/biases4.npy', biases4)
np.save('trained_params/biases5_p1.npy', biases5_p1)
np.save('trained_params/biases5_p2.npy', biases5_p2)
np.save('trained_params/biases5_p3.npy', biases5_p3)
np.save('trained_params/biases6_p1.npy', biases6_p1)
np.save('trained_params/biases6_p2.npy', biases6_p2)