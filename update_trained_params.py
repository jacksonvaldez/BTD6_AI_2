import numpy as np

# Updates the trained params with the mutated params

filters1 = np.load('mutated_params/filters1.npy')
filters2 = np.load('mutated_params/filters2.npy')
biases1 = np.load('mutated_params/biases1.npy')
biases2 = np.load('mutated_params/biases2.npy')
weights1 = np.load('mutated_params/weights1.npy')
weights2_p1 = np.load('mutated_params/weights2_p1.npy')
weights2_p2 = np.load('mutated_params/weights2_p2.npy')
weights2_p3 = np.load('mutated_params/weights2_p3.npy')
weights2_p4 = np.load('mutated_params/weights2_p4.npy')
weights2_p5 = np.load('mutated_params/weights2_p5.npy')
weights2_p6 = np.load('mutated_params/weights2_p6.npy')
biases3 = np.load('mutated_params/biases3.npy')
biases4_p1 = np.load('mutated_params/biases4_p1.npy')
biases4_p2 = np.load('mutated_params/biases4_p2.npy')
biases4_p3 = np.load('mutated_params/biases4_p3.npy')
biases4_p4 = np.load('mutated_params/biases4_p4.npy')
biases4_p5 = np.load('mutated_params/biases4_p5.npy')
biases4_p6 = np.load('mutated_params/biases4_p6.npy')

np.save('trained_params/filters1.npy', filters1)
np.save('trained_params/filters2.npy', filters2)
np.save('trained_params/biases1.npy', biases1)
np.save('trained_params/biases2.npy', biases2)
np.save('trained_params/weights1.npy', weights1)
np.save('trained_params/weights2_p1.npy', weights2_p1)
np.save('trained_params/weights2_p2.npy', weights2_p2)
np.save('trained_params/weights2_p3.npy', weights2_p3)
np.save('trained_params/weights2_p4.npy', weights2_p4)
np.save('trained_params/weights2_p5.npy', weights2_p5)
np.save('trained_params/weights2_p6.npy', weights2_p6)
np.save('trained_params/biases3.npy', biases3)
np.save('trained_params/biases4_p1.npy', biases4_p1)
np.save('trained_params/biases4_p2.npy', biases4_p2)
np.save('trained_params/biases4_p3.npy', biases4_p3)
np.save('trained_params/biases4_p4.npy', biases4_p4)
np.save('trained_params/biases4_p5.npy', biases4_p5)
np.save('trained_params/biases4_p6.npy', biases4_p6)